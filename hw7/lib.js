function $(e){return document.getElementById(e)}function $$(e){var n=document.querySelectorAll(e);return 1==n.length?n[0]:n}function hide(e){if(e instanceof Array)for(var n=0;n<e.length;n++)e[n].classList.add("hidden");else e.classList.add("hidden")}function show(e){if(e instanceof Array)for(var n=0;n<e.length;n++)e[n].classList.remove("hidden");else e.classList.remove("hidden")}function toggleDisplay(e){if(e instanceof Array)for(var n=0;n<e.length;n++)e[n].classList.toggle("hidden");else e.classList.toggle("hidden")}function gen(e,n){var o=document.createElement(e);if(n&&""!=n)if(n instanceof Array)for(var t=0;t<n.length;t++)o.classList.add(n[t]);else o.classList.add(n);return o}function genText(e,n){var o=document.createElement(e);return o.innerText=n,o}function appendChildren(e,n){for(var o=0;o<n.length;o++)e.appendChild(n[o]);return e}function escSpChar(e){for(var n=["!",'"',"#","$","%","&","'","(",")","*","+",",","-",".","/",":",";","<","=",">","?","@","[","\\","]","^","`","{","|","}","~"," "],o=0;o<e.length;o++)n.includes(e.charAt(o))&&(e=e.slice(0,o)+"\\"+e.slice(o),o+=1);return e}function getRequest(e,n,o){var t=new XMLHttpRequest;t.open("GET",e+n),t.onload=o,t.onerror=function(){console.log(this.responseText)},t.send()}function postRequest(e,n,o){var t=new XMLHttpRequest;t.open("POST",e),t.onload=o,t.onerror=function(){console.log(this.responseText)},t.send(n)}function fetchPid(){if(!pid||!token){var e=new XMLHttpRequest;e.onload=function(){var e=this.responseText.split("\n");e.length<2?console.log("Error: getcreds.php does not output pid and token on separate lines."):(pid=e[0],token=e[1],console.log("getcreds.php call finished. pid: "+pid+", token: "+token))},console.log("Calling getcreds.php..."),e.open("GET","getcreds.php"),e.onerror=function(e){console.log("Error calling getcreds.php: "+e)},e.send()}}function restartMyDex(){var e=new FormData;e.append("mode","removeall");var n=new XMLHttpRequest;n.open("POST","delete.php"),console.log("Calling delete.php with mode=removeall..."),n.onload=function(){console.log("delete.php finished with mode=removeall"),console.log("The following pokedex should be empty:"),fetchMyPokemon()},n.onerror=function(){console.log(this.responseText)},n.send(e)}function getDex(e,n,o){var t=new FormData;t.append("pid",e),t.append("token",n),o&&t.append("force","true");var s=new XMLHttpRequest;s.onload=function(){var e=JSON.parse(this.responseText);if(e.length>1){restartMyDex();for(i in e)addPokemon(e[i])}},s.open("POST",SERVICE_URL+"restart.php"),s.send(t)}function trade(e,n){addToPokedex(n),removeFromPokedex(e)}function removeFromPokedex(e){var n=new FormData;n.append("name",e);var o=new XMLHttpRequest;o.open("POST","delete.php"),console.log("Calling delete.php with name="+e+"..."),o.onload=function(){$(e).classList.add("unfound"),$(e).onclick="",console.log(e+" successfully deleted from delete.php"),fetchMyPokemon()},o.send(n)}function fetchMyPokemon(){console.log("Calling select.php..."),getRequest("select.php","",function(){console.log("select.php returned: "),myPokemon=JSON.parse(this.responseText),console.log(myPokemon)})}function addPokemon(e){var n=new FormData;n.append("name",e);var o=new XMLHttpRequest;console.log("Calling insert.php with name="+e+"..."),o.open("POST","insert.php"),o.onload=function(){console.log("insert.php finished."),fetchMyPokemon()},o.send(n)}function creds(){return"?pid="+pid+"&token="+token}var token,pid,myPokemon,SERVICE_URL="https://webster.cs.washington.edu/pokedex-2/17au/";
